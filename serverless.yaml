frameworkVersion: ">=3.12.0 <4.0.0"

service: okdata-maskinporten-api

provider:
  name: aws
  runtime: python3.9
  memorySize: 1024
  region: eu-west-1
  endpointType: REGIONAL
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: ${self:custom.deploymentBucket.${self:provider.stage}, self:custom.deploymentBucket.dev}
    serverSideEncryption: AES256
  deploymentPrefix: deploy
  logRetentionInDays: 90
  iam:
    role:
      permissionsBoundary: "arn:aws:iam::${aws:accountId}:policy/oslokommune/oslokommune-boundary"
      managedPolicies:
        - 'arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess'
        - "arn:aws:iam::${aws:accountId}:policy/okdata-maskinporten-api"
  tags:
    GIT_REV: ${git:branch}:${git:sha1}
    VERSION: ${self:custom.version}
  environment:
    ROOT_PATH: "/maskinporten"
    GIT_REV: ${git:branch}:${git:sha1}
    STAGE: ${self:provider.stage}
    VERSION: ${self:custom.version}
    SERVICE_NAME: ${self:service}
    MASKINPORTEN_ADMIN_CLIENT_ID_TEST: ${ssm:/dataplatform/maskinporten/admin-client-id-test}
    MASKINPORTEN_ADMIN_CLIENT_ID_PROD: ${ssm:/dataplatform/maskinporten/admin-client-id-prod}
    MASKINPORTEN_CONSUMER_ORG: ${ssm:/dataplatform/maskinporten/consumer-org}
    MASKINPORTEN_KEY_ALIAS: client-key
    KEYCLOAK_SERVER: ${ssm:/dataplatform/shared/keycloak-server-url}
    KEYCLOAK_REALM: api-catalog
    RESOURCE_SERVER_CLIENT_ID: okdata-resource-server
    OKDATA_PERMISSION_API_URL: ${ssm:/dataplatform/shared/api-gateway-url}/okdata-permission-api
    TIMEZONE: "Europe/Oslo"
    BACKUP_BUCKET_NAME: ${self:custom.backupBucket.${self:provider.stage}, self:custom.backupBucket.dev}
    SLACK_MASKINPORTEN_API_ALERTS_WEBHOOK_URL: ${ssm:/dataplatform/slack/maskinporten-api-slack-webhook}
    EMAIL_API_URL: ${ssm:/dataplatform/shared/email-api-url}
    EMAIL_API_KEY: ${ssm:/dataplatform/shared/email-api-key}

package:
  patterns:
    - '!**/*'
    - app.py
    - handler.py
    - jobs/*.py
    - maskinporten_api/*.py
    - models/*.py
    - resources/*.py

functions:
  app:
    handler: handler.handler
    events:
      - http: ANY /
      - http: ANY /{any+}
    timeout: 29
  export-audit-trail:
    handler: jobs.backup.export_audit_trail
    events:
      - schedule: cron(0 0 1 * ? *)
    timeout: 30
  client-report-internal:
    handler: jobs.client_report.send_client_report_internal
    events:
      - schedule:
          # Midnight at the first day of every month.
          rate: cron(0 0 1 * ? *)
          enabled: ${self:custom.clientReportEnabled.${opt:stage, self:provider.stage}}
    timeout: 300
  client-report-external:
    handler: jobs.client_report.send_client_report_external
    events:
      - schedule:
          # At 10:00 on 10/10 every year (the security month).
          rate: cron(0 10 10 10 ? *)
          enabled: ${self:custom.clientReportEnabled.${opt:stage, self:provider.stage}}
    timeout: 300

plugins:
  - serverless-plugin-git-variables
  - serverless-prune-plugin
  - serverless-python-requirements

resources:
  Description: |
    ${self:service} ${git:branch}:${git:sha1}
    ${git:message}

custom:
  version: 0.1.0
  pythonRequirements:
    dockerizePip: non-linux
    dockerImage: public.ecr.aws/sam/build-python3.9:latest
    slim: true
    usePoetry: false
  prune:
    automatic: true
    number: 3
  exportGitVariables: false
  deploymentBucket:
    prod: ok-origo-dataplatform-config-prod
    dev: ok-origo-dataplatform-config-dev
  backupBucket:
    prod: ok-origo-dataplatform-backup-prod
    dev: ok-origo-dataplatform-backup-dev
  clientReportEnabled:
    prod: true
    dev: false
